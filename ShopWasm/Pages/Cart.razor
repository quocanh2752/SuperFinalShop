@page "/Cart"
@using ShopApi.Models
@using ShopApi.Services
@inject ICartService CartService

<section class="bg-light my-5">
    <div class="container">
        <div class="row">
            <!-- Giỏ hàng -->
            <div class="col-lg-9">
                <div class="card border shadow-0">
                    <div class="m-4">
                        <h4 class="card-title mb-4">Giỏ hàng của bạn</h4>
                        @if (cartItems == null || !cartItems.Any())
                        {
                            <p>Giỏ hàng của bạn đang trống.</p>
                        }
                        else
                        {
                            <div class="row gy-3 mb-4">
                                @foreach (var item in cartItems)
                                {
                                    <div class="col-lg-12">
                                        <div class="d-flex align-items-center mb-3">
                                            <img src="./picture/@item.ImageUrl" class="border rounded me-3" style="width: 96px; height: 96px;" />
                                            <div class="flex-grow-1">
                                                <a  class="nav-link">@item.Name</a>
                                                <div class="d-flex align-items-center mt-2">
                                                    <button class="btn btn-light border me-2" @onclick="() => UpdateQuantity(item, item.Quantity - 1)" disabled="@(!CanDecreaseQuantity(item))">-</button>
                                                    <input type="number" class="form-control text-center" style="width: 80px;" value="@item.Quantity" readonly />
                                                    <button class="btn btn-light border ms-2" @onclick="() => UpdateQuantity(item, item.Quantity + 1)">+</button>
                                                </div>
                                            </div>
                                            <div class="d-flex flex-column align-items-lg-center ms-3">
                                                <span class="h6 mb-2">Tổng: @($"{item.Price * item.Quantity:0.00} ₫")</span>
                                                <small class="text-muted text-nowrap">@($"{item.Price:0.00} ₫ / sản phẩm")</small>
                                            </div>
                                            <div>
                                                <button type="button" class="btn btn-light border text-danger icon-hover-danger" @onclick="() => RemoveFromCart(item)">
                                                    <i class="fas fa-trash-alt"></i>
                                                </button>
                                            </div>

                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        @if (isSuccessMessageVisible)
                        {
                            <div class="alert alert-success" role="alert">
                                Xóa sản phẩm thành công!
                            </div>
                        }
                    </div>
                </div>
            </div>
            <!-- Giỏ hàng -->
            <!-- Tổng kết -->
            <div class="col-lg-3">
                <div class="card mb-3 border shadow-0">
                    <div class="card-body">
                        <form>
                            <div class="form-group">
                                <label class="form-label">Có mã giảm giá?</label>
                                <div class="input-group">
                                    <input type="text" class="form-control border" placeholder="Mã giảm giá" />
                                    <button type="button" class="btn btn-light border">Áp dụng</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="card shadow-0 border">
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <p class="mb-0">Tổng giá:</p>
                            <p class="mb-0">@($"{totalPrice:0.00} ₫")</p>
                        </div>
                        <div class="mt-3">
                            <a href="#" class="btn btn-success w-100 shadow-0 mb-2">Thanh toán</a>
                            <a href="/" class="btn btn-light w-100 border mt-2">Quay lại cửa hàng</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Tổng kết -->
        </div>
    </div>
</section>

@code {
    private IEnumerable<Product>? cartItems;
    private decimal totalPrice;
    private bool isSuccessMessageVisible;

    protected override async Task OnInitializedAsync()
    {
        await LoadCartItems();
    }

    private async Task LoadCartItems()
    {
        cartItems = await CartService.GetCartItems();
        UpdateTotalPrice();
    }

    private async Task RemoveFromCart(Product product)
    {
        await CartService.RemoveFromCart(product);
        await LoadCartItems();
        isSuccessMessageVisible = true;
        await Task.Delay(3000); // Thời gian hiển thị thông báo là 3 giây
        isSuccessMessageVisible = false;
    }

    private void UpdateTotalPrice()
    {
        totalPrice = cartItems?.Sum(item => item.Price * item.Quantity) ?? 0;
    }

    private async Task UpdateQuantity(Product item, int newQuantity)
    {
        if (newQuantity > 0)
        {
            item.Quantity = newQuantity;
            await CartService.UpdateCartItem(item);
            await LoadCartItems();
        }
    }

    // Phương thức kiểm tra xem số lượng sản phẩm có thể giảm hay không
    private bool CanDecreaseQuantity(Product item)
    {
        return item.Quantity > 1;
    }
}
